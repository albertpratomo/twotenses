---
import {useStoryblokApi} from '@storyblok/astro';
import StoryblokComponent from '@storyblok/astro/StoryblokComponent.astro';
import Layout from '@/layouts/Layout.astro';

export async function getStaticPaths() {
    const api = useStoryblokApi();

    const {data: {stories}} = await api.get('cdn/stories', {
        excluding_fields: 'sections',
        filter_query: {
            component: {in: 'Page'},
        },
        version: import.meta.env.DEV ? 'draft' : 'published',
    });

    return stories
        .map(story => ({
            params: {
                slug: story.full_slug === 'home'
                    ? undefined
                    : story.full_slug.endsWith('/')
                        ? story.full_slug.slice(0, -1)
                        : story.full_slug,
            },
        }));
}

async function getStaticProps({slug}) {
    const api = useStoryblokApi();

    let response;

    try {
        response = await api.get(`cdn/stories/${slug || 'home'}`, {
            version: import.meta.env.DEV ? 'draft' : 'published',
        });
    }
    catch (error) {
        return false;
    }

    return {story: response.data.story};
}

const {slug} = Astro.params;

const {story} = await getStaticProps(Astro.params);
---

<Layout>
    {story ? <StoryblokComponent blok={story.content} /> : slug}
</Layout>
