---
import {useStoryblokApi} from '@storyblok/astro';
import StoryblokComponent from '@storyblok/astro/StoryblokComponent.astro';
import Layout from '@/layouts/Layout.astro';

export async function getStaticPaths() {
    const api = useStoryblokApi();

    const {data: {links}} = await api.get('cdn/links', {
        version: import.meta.env.DEV ? 'draft' : 'published',
    });

    return Object.values(links)
        .map(link => ({
            href: link.real_path,
            params: {
                slug: link.slug === 'home' ? undefined : link.slug,
            },
            text: link.name,
        }));
}

async function getStaticProps({slug}) {
    const api = useStoryblokApi();

    let response;

    try {
        response = await api.get(`cdn/stories/${slug || 'home'}`, {
            version: import.meta.env.DEV ? 'draft' : 'published',
        });
    }
    catch (error) {
        return false;
    }

    return {story: response.data.story};
}

const {slug} = Astro.params;

const {story} = await getStaticProps(Astro.params);

const links = await getStaticPaths();
---

<Layout
    title="twotenses"
    links={links}
>
    {story ? <StoryblokComponent blok={story.content} /> : slug}
</Layout>
